            Throwable
                |
                V
Exception                   Error
    |
    V
RunTimeException

Example -
public class ExceptionTest {
   public static void main(String args[]) {
      int a[] = new int[2];
      try {
         System.out.println("Access element three :" + a[3]);
      } catch (ArithmeticException |ArrayIndexOutOfBoundsException e) {
         System.out.println("Exception thrown :" + e);
      } finally {
         System.out.println("The finally statement is always executed");
      }
   }
}

throw new NullPointerException("");
If a method throws an exception without handling it, then it must use throws to indicate
the same to the caller so that it can handle it by catching it or again using throws.

int method(int[] arr) throws IllegalAccessException

Some exceptions -
Checked Exceptions (Compile time so compiler forces to catch it or use throws)
ClassNotFound
Interrupted
IOException
FileNotFound

Unchecked Exceptions (Run time)
ClassCastException
Arithmetic
NullPointer
ArrayIndexOutOfBounds
IllegalArgumentException
IllegalArgumentException

Note that we can group only un-related exceptions together. That means itâ€™s illegal
to group exceptions which have parent-child relationship.

Compiler error -
catch (FileNotFoundException | IOException ex)

Compiler error -
 catch (IOException ex) {
    System.err.println("Find not found");
} catch (FileNotFoundException ex) {
    System.err.println("Error reading file");
}

