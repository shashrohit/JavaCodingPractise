The name reflection is used to describe code which is able to inspect other code.

Uses -
1. For example, if have an object of an unknown type in Java, and you would like
to call a 'doSomething()' method on it if one exists. Using reflection, your code
can look at the object and find out if it has a method called 'doSomething' and
then call it if you want to.

Method method = foo.getClass().getMethod("doSomething", null);
method.invoke(foo, null);

2. One very common use case in Java is the usage with annotations.
JUnit 4, for example, will use reflection to look through your classes for methods
tagged with the @Test annotation, and will then call them when running the unit test.

3. Debuggers also use reflections to get access to private members on classes.

Drawbacks of Reflection
1. Performance Overhead
2. Insecure exposure of Internals
