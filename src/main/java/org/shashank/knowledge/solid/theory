SOLID Principles - 5 OOPs principles for writing clean code.

1. Single Responsibility - Each class should have only one purpose and
not be filled with excessive functionality.

2. Open Closed - Classes should be open for extension and closed for
modification. So, you should not rewrite a class for implementing new
features.

3. Liskov Substitution - Every subclass should be substitutable for it's
parent class. Parent can be extending class or interface here.

4. Interface Segregation - Interfaces should not force classes to implement
what they can't do. Large interfaces should be divided into smaller ones.

5. Dependency Inversion - Components should depend on abstractions and not
on concretions.
